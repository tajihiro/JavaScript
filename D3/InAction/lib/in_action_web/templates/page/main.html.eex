
<svg width="400" height="120"></svg>

<script>
    // d3.selectAll("div.c1")
    //     .append("svg")
    //     .attr("width", 400)
    //     .attr("height", 300)
    //     .style("border", "1px solid gray")
    //     .enter();


    d3.csv("/data/data.csv", (error, data) => {
        if(error){
            console.log(error);
        }else{
            showData(data);
        }
    });
    function showData(data){
        d3.select("body")
            .selectAll("div.family")
            .data(data)
            .enter()
            .append("div")
            .attr("class", "family")
            .html(d => d.name + "("+ d.age + ")");
    }

    d3.json("/data/tweets.json", (error, data) => {handleTweet(data.tweets)});

    function handleTweet(data){
        var nestedTweets = d3.nest().key(d => d.user).entries(data);
        nestedTweets.forEach(d => {
            d.numTweets = d.values.length;
        })
        var maxTweets = d3.max(nestedTweets, d => d.numTweets);
        var yScale = d3.scaleLinear().domain([0, maxTweets]).range([0, 100]);

        //console.log("yScale:" + yScale(numTweets));
        d3.select("svg")
            .selectAll("rect")
            .data(nestedTweets)
            .enter()
            .append("rect")
            .attr("width", 50)
            .attr("height", d => yScale(d.numTweets))
            .attr("x", (d, i) => i * 60)
            .attr("y", d => 100 - yScale(d.numTweets))
            .style("fill", "#FE9922")
            .style("stroke", "#9A8B7A")
            .style("stroke-width", "1px");
    }
</script>
